server.port=8887

# Enable evaluation of forward-headers, in order for idp redirects to work
server.forward-headers-strategy=framework

app.unProtectedUrls=/this/**,/that/**,/swagger.json
app.csrfDisabledUrls=this,that

# OIDC client and provider configuration
# POI:
#   https://docs.spring.io/spring-security/site/docs/5.2.x/reference/html/oauth2.html#oauth2login-boot-property-mappings
#   https://www.baeldung.com/spring-security-5-oauth2-login
#   WELL-KNOWN-URL -> something similar to this: http://localhost:8888/authserver/.well-known/openid-configuration
spring.security.oauth2.client.registration.myClientId.provider=myClientId
spring.security.oauth2.client.registration.myClientId.client-id=myClientUUID
spring.security.oauth2.client.registration.myClientId.client-secret=clientSecret
spring.security.oauth2.client.registration.myClientId.client-authentication-method=client_secret_basic
spring.security.oauth2.client.registration.myClientId.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.myClientId.scope[0]=openid
spring.security.oauth2.client.registration.myClientId.scope[1]=profile
spring.security.oauth2.client.registration.myClientId.scope[2]=address
spring.security.oauth2.client.registration.myClientId.scope[3]=birthdate
spring.security.oauth2.client.registration.myClientId.scope[4]=birthplace
spring.security.oauth2.client.registration.myClientId.scope[5]=phone
spring.security.oauth2.client.registration.myClientId.redirect-uri=http://localhost:8080/login/oauth2/code
spring.security.oauth2.client.provider.idk.issuer-uri=http://localhost:8888/authserver
spring.security.oauth2.client.provider.idk.authorization-uri=http://localhost:8888/authserver/oidc/authorize
spring.security.oauth2.client.provider.idk.token-uri=http://localhost:8888/authserver/oidc/token
spring.security.oauth2.client.provider.idk.jwk-set-uri=http://localhost:8888/authserver/oidc/keys
spring.security.oauth2.client.provider.idk.user-info-uri=http://localhost:8888/authserver/oidc/userinfo
